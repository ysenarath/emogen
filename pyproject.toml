[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "emogen"
dynamic = ["version"]
description = "A Python library for generating emotions."
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
    { name = "Yasas Senarath", email = "12231659+ysenarath@users.noreply.github.com" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
    "datasets",
    "torch~=2.3.1",
    "transformers~=4.45.2",
    "evaluate",
    "numpy",
    "pandas",
    "orjson",
    "matplotlib",
    "seaborn",
    "rich",
    "tqdm",
    "scikit-learn",
    "torchvision",
    "optuna",
]

[project.urls]
Documentation = "https://github.com/Yasas Senarath/emogen#readme"
Issues = "https://github.com/Yasas Senarath/emogen/issues"
Source = "https://github.com/Yasas Senarath/emogen"

[tool.hatch.version]
path = "src/emogen/__init__.py"

[tool.hatch.envs.types]
extra-dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/emogen tests}"

[tool.coverage.run]
source_pkgs = ["emogen", "tests"]
branch = true
parallel = true
omit = []

[tool.coverage.paths]
emogen = ["src/emogen", "*/emogen/src/emogen"]
tests = ["tests", "*/emogen/tests"]

[tool.coverage.report]
exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "SIM", # flake8-simplify
    "RUF", # ruff-specific rules
    "PT",  # pytest style
    "PL",  # pylint
    "TRY", # tryceratops
]
ignore = [
    "E501", # line too long - let black handle this
]

[tool.ruff.lint.isort]
known-first-party = ["emogen"]
combine-as-imports = true
split-on-trailing-comma = false

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "torch.nn.Parameter",
    "Parameter",
    "torch.tensor",
    "torch.Tensor",
]

[tool.hatch.envs.default]
dependencies = ["pytest", "pytest-cov", "ruff>=0.2.1"]
